	SI 506 - FINAL PROJECT PLAN

* What's your overall project plan, in 1-3 sentences?
-----

I am creating an “API mashup” that would enable a user to search a local cache (obtained from the Netflix Roulette REST API) for shows about a given filmstar for a particular year and display his/her shows from high to low rating. The program would then allow the user to select the shows of choice (from the listed shows) and retrieve product listings (DVDs & Blu-ray Discs) about that show from the eBay store using the eBay Finding REST API and display the search results to the user based on the following conditions:
1. User enters the maximum price he/she is willing to pay for the item.
2. User is asked whether he/she would like to search for top rated listings.
3. User is asked to enter the maximum number of retrievals to fetch from Ebay.
4. Ebay items are always listed from highest price to lowest price on the screen.


* Why are you choosing to do this project?
-----

I am choosing this project because I would like to learn how to use other REST APIs (other than the ones taught in class) and create my own “API mashup” with them. Normally, people know filmstars by their respective names but know very little about their movies. My Python script would allow users to know more about the shows of a particular actor/actress and also provide multimedia shopping options online based on the user’s selection.


* What classes are you planning to define? For each:
- What will the class be called?
- What will one instance of the class represent? How would you describe it in English?
- What will the class constructor require as input?
- What are three instance variables the class might have?
- What are a couple methods the class might have? What will they do?
-----

Number of Classes: 2

1. Class Name: Shows
Description: Each instance of this class represents a set of shows from Netflix about a particular filmstar who is a part of the cast and for a particular release year.
Constructor Inputs: filmstar name, release year, shows
Instance Variables: self.filmstar_name, self.release_year, self.shows_all, self.shows_selected
Methods: 
__init__(): Represents the constructor of the class “Shows”.
__str__(): Displays general information about each instance of the class.
sort_shows(): Sorts the shows of the filmstar from highest to lowest based on their ratings.
select_shows(): Allows the user to select shows from the displayed list of shows.
display_shows(): Takes a show (dictionary) as a input parameter and displays information about it on the screen.

2. Class Name: EbayItems
Description: Each instance of this class represents a set of available multimedia items (DVDs & Blu-ray Discs) for each show about a particular filmstar released in a particular year.
Constructor Inputs: selected shows, max price, top rated listing, maximum number of items
Instance Variables: self.show_selected, self.max_price, self.top_rated, self.max_items, self.ebay_items
Methods:
__init__(): Represents the constructor of the class “EbayItems”.
__str__(): Displays general information about each instance of the class.
fetch_items(): Searches the eBay website for product listings using the eBay Finding REST API and locally caches the results.
read_cache(): Reads the “selected shows” details from the local cache on the disk.
display_items(): Displays information about the product listings (DVDs & Blu-ray Discs) from Ebay in human-readable format, ranking them from highest to lowest price.


* If you plan to define functions outside class definitions, what are they? What will they take as input? What will they return?
-----

I will be creating a function called fetch_shows_from_cache() that will take a filmstar’s name and the release year as input parameters and this function will search a local cache (obtained from the Netflix Roulette REST API using retrieve_shows.py) to retrieve all of the filmstar’s movies for a given release year. The resulting list of dictionaries would be returned from this function.

I will be creating another function called main() outside the class definition. It will be responsible for the execution of the entire Python program.


* What sequence of data might you be sorting? (A list of posts? Of photos? Of... ????) By what attribute will you sort that sequence? Why?
-----

I will be sorting a list of shows (dictionaries) based on their ratings from high to low. This will enable the user to learn more about the top rated shows (from Netflix) pertaining to a given filmstar.

I will also be sorting the list of product listings (DVDs & Blu-ray Discs) retrieved from Ebay according to their prices from high to low.


* What APIs are you planning to use? Provide links to the documentation here.
What kind of authentication does each one require? OAuth? A key? Do you have to register an account? What parameters do you need to include in your parameters dictionary?
-----

I plan to use the following two APIs:

1. REST API Name: Netflix Roulette API 
Documentation: http://netflixroulette.net/api/
Authentication: Not required
Key: Not required
Account: Not required
Parameters: actor

2. REST API Name: eBay Finding API
Documentation: http://developer.ebay.com/Devzone/finding/CallRef/index.html
Authentication: OAuth 2.0
Key: Application token
Account: Require an account with the eBay developers program.
Parameters: security-appname, operation-name, service-version, response-data-format, keywords, paginationInput.entriesPerPage, global-id, siteid


* What might you need to write tests for in this project?
-----

I may write the following tests:
1. Check whether the function fetch_shows_from_cache() returns the correct value for a particular “cached” input.
2. Check whether the function fetch_shows_from_cache() returns the correct value for a particular “non-cached” input.
3. Check whether a given instance is of the class Shows.
4. Check whether a given instance is of the class EbayItems. 
5. Check whether a given instance is NOT of the class Shows.
6. Check whether a given instance is NOT of the class EbayItems.
7. Check whether the filmstar_name instance variable of the instance example1 has value “Dwayne Johnson”.
8. Check whether the max_price instance variable of the instance example2 has value 100.
9. Check whether the top_rated instance variable of the instance example2 has value True.
10. Check whether the release_year instance variable of the instance example3 has value 1996.
11. Check whether the max_items instance variable of the instance example4 has value 200.
12. Check whether the types of instances example1 (Shows) and example4 (EbayItems) are the same.


* What major concerns do you have about this project plan, if any?
-----

No concerns as of now — looking forward to start the project work after hearing back from you.


* Write some code to get data from each API and save that data in a file (cache it). Submit that code file and the data file(s) you save. Here: What do we need to know to run the code you submit? What does it do? What data have you submitted? Please describe briefly.
-----

Netflix Roulette API: 
You need to know the actor name to send it as a parameter to the requests.get() method. The key name is ‘actor’ and its value in my code file (netflix.py) is “Nicholas Cage”. It retrieves some information about Nicholas Cage’s shows from Netflix. The data cache contains a list of shows (dictionaries) featuring “Nicholas Cage” from Netflix.

eBay Finding API:
You need to know my OAuth 2.0 Application Token (mentioned in the file in the variable ‘application_token’) along with the other parameters mentioned in the variable ‘url_params’. The key ‘keywords’ has the value “The Croods”, which is the name of a show featuring filmstar “Nicholas Cage”. We retrieve product listings for the keyword “The Croods” from eBay as the result. There are 10 results retrieved from eBay as given by the parameter 'paginationInput.entriesPerPage’. The data cache contains a list of products for the keyword “The Croods”. There are ways to filter by category based on the keys present in the data too.


